version: 2

models:
  - name: mpiPotentialMatches
    data_tests:
      - has_rls:
          meta:
            requirement: [ 'ETL-1574' ]
    description: >
      Descriptions for the configurations are described in the config table [admin.mpiPotentialMatchesConfig].
      Pay close attention on what to set/change, as this will impact performance and what patients are pulled.
      Be cautious of expanding the DOBDayMatch config to more than 0 days, as this causes considerable query slowness
      for larger clients.

    columns:
      - name: compareRank
        description: >
          This column is critical in highlighting what has a high (or low) probability of being a match.
          This uses the Levenshtein distance function (Levenshtein reference link) to see differences between key fields
          (last name, first name member number, phone, zip, and DOB). Ex. Jane Doe and Jane Smith could have the same
          DOB, different phone numbers, and different addresses. This would result in a low comapreRank, however, one
          record could be 5 years old, and she has since married which could explain the last name/phone/address
          changes. The calculation will sum up all the Levenshtein distance outputs from the first name, last name, zip,
          and DOB. There are a couple of nuances to the calculationsâ€¦ If the member numbers match exactly, the
          compareRank automatically returns a 0 (aka max probability). If the phone numbers match exactly, it will
          divide the summed-up compareRank in half. General guideline on how to use the report: Most results are going
          to have compareRanks greater than ~5. Anything above this number can be viewed as having low confidence of
          being a potential merge; however, they're included within the report given they've met *some* criteria based
          on the configurations set.
      - name: dataDensity_r1
        description: >
          This column is a percent rank for how much data that individual ID has. This will be a comparison
          amongst all other individuals in their DB partitioned by individualType (member or patient). The more claims
          (for members) OR encounters (for patients) compared to others in the population, will increase the data
          density percent.
      - name: dataDensity_r2
        description: >
          This column is a percent rank for how much data that individual ID has. This will be a comparison
          amongst all other individuals in their DB partitioned by individualType (member or patient). The more claims
          (for members) OR encounters (for patients) compared to others in the population, will increase the data
          density percent.
      - name: personId_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: individualType_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: individualId_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: source_name1
        description: >
          Name of the plan data source.
      - name: personId_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: individualType_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: individualId_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: source_name2
        description: >
          Name of the plan data source.
      - name: dist_lastName
        description: >
          This column is an output from the Levenshtein distance function which is then used in
          calculating the compareRank field.
      - name: dist_firstName
        description: >
          This column is an output from the Levenshtein distance function which is then used in
          calculating the compareRank field.
      - name: dist_memberNumber
        description: >
          This column is an output from the Levenshtein distance function which is then used in
          calculating the compareRank field.
      - name: dist_phone
        description: >
          This column is an output from the Levenshtein distance function which is then used in
          calculating the compareRank field.
      - name: dist_zip
        description: >
          This column is an output from the Levenshtein distance function which is then used in
          calculating the compareRank field.
      - name: dist_dob
        description: >
          This column is an output from the Levenshtein distance function which is then used in
          calculating the compareRank field.
      - name: lastName_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: lastName_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: firstName_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: firstName_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: dateOfBirth_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: dateOfBirth_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: memberNumber_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: memberNumber_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: phone1_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: phone1_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: phone2_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: phone2_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: zip_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: zip_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: address1_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: address1_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: address2_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
      - name: address2_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
      - name: city_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
        data_tests:
          - column_values_are_in_uppercase:
              meta:
                requirement: [ 'FDR-2062' ]
      - name: city_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
        data_tests:
          - column_values_are_in_uppercase:
              meta:
                requirement: [ 'FDR-2062' ]
      - name: state_r1
        description: >
          This is generated by the 1st source (see column source_name1).
          Ex. phone1_r1 and phone2_r1 are the 2 phone numbers based on the columns in the plan_member (home_phone and
          cell_phone) and t_patient (phone_1 and phone_2).
        data_tests:
          - column_values_are_in_uppercase:
              meta:
                requirement: [ 'FDR-2062' ]
      - name: state_r2
        description: >
          This is generated by the 2nd source (see column source_name2).
        data_tests:
          - column_values_are_in_uppercase:
              meta:
                requirement: [ 'FDR-2062' ]
